import json
import os
import hashlib

        
def get_hash(filename):
       blockchain_dir = os.curdir + '/blockchain/'
       file = open(blockchain_dir + filename, 'rb').read()
       return hashlib.md5(file).hexdigest()

def check_integrity():
        
        blockchain_dir = os.curdir + '/blockchain/'
        files = os.listdir(blockchain_dir) 
        files = sorted([int(i) for i in files])
        results = [ ]
        for file in files[1:]:
               f = open(blockchain_dir + str(file))
               h = json.load(f)['hash']

               prev_file = str(file - 1)
               actual_hash = get_hash(prev_file)

               if h == actual_hash:
                       res = 'OK.'
               else:
                        res = 'CORRUPTED'

        #print('Block {} is: {}'.format(prev_file, res))
        results.append({'BLOCK': prev_file, 'result': res})
        return results

def write_block (name, amount, to_whom, prev_hash = ' '):

       blockchain_dir = os.curdir + '/blockchain/'
       files = os.listdir(blockchain_dir) 
       files = sorted([int(i) for i in files]) 

       prev_file = files[-1]

       filename = str(prev_file + 1)

       prev_hash = get_hash(str(prev_file))
        	    
       data = {'name' : name, 
	   'amount' : amount, 
	   'to_whom' : to_whom, 
	   'hash' : prev_hash}
       
       with open(blockchain_dir + filename, 'w', encoding='Latin-1') as file:
                 json.dump(data, file, indent=4, ensure_ascii=False)

def main():
        write_block(name="ivan", amount=8, to_whom="lucia")
        print(check_integrity())

main()





    
